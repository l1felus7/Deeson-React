{"version":3,"sources":["App.js","index.js"],"names":["timer","milliseconds","running","lapTimes","addLapTimes","setTimeout","updateLaptimes","console","log","millisecondsToTime","time","pad","n","slice","ms","secs","mins","startPauseClick","clearInterval","ReactDOM","render","document","getElementById","setInterval","lapClick","unshift","localStorage","setItem","toString","map","lapTime","index","key","className","onClick","splice","deleteLap","resetClick","App","data","getItem","split","retrieveSavedLapTimes","id"],"mappings":"+KAKIA,E,gCADAC,G,MAAgB,GAEhBC,GAAU,EACVC,EAAW,GACXC,EAAcC,YAAW,WAA0BC,IAAkBC,QAAQC,IAAIJ,KAAgB,KAqBrG,SAASK,EAAmBC,GAC3B,SAASC,EAAIC,GACZ,OAAQ,KAAOA,GAAGC,OAAO,GAE1B,IAAIC,EAAKJ,EAAO,IAEZK,GADJL,GAAQA,EAAOI,GAAM,KACH,GAEdE,GADJN,GAAQA,EAAOK,GAAQ,IACL,GAGlB,OAAOJ,GAFID,EAAOM,GAAQ,IAER,IAAML,EAAIK,GAAQ,IAAML,EAAII,GAAQ,IAAMJ,EAAIG,GAGjE,SAASG,IACRX,IACKJ,GAMJgB,cAAclB,GACdE,GAAU,EACViB,IAASC,OAAO,QAASC,SAASC,eAAe,YAhClDtB,EAAQuB,aAAY,WACnBtB,IACAkB,IAASC,OAAOX,EAAmBR,GAAeoB,SAASC,eAAe,WACxE,IACHf,QAAQC,IAAIL,GAsBXD,GAAU,EACViB,IAASC,OAAO,QAASC,SAASC,eAAe,WAUnD,SAASE,IACJvB,EAAe,EAClBE,EAASsB,QAAQ,GAGjBtB,EAASsB,QAAQxB,GAElByB,aAAaC,QAAQ,WAAYxB,EAASyB,YAC1CtB,IAGD,SAASA,IACRa,IAASC,OAKR,4BACEjB,EAAS0B,KAAI,SAACC,EAASC,GAAV,OAAoB,wBAAIC,IAAKD,GACzCtB,EAAmBqB,GAAW,IAAI,4BAAQG,UAAU,gBAAgBC,QAAS,kBAMlF,SAAmBH,GAClB5B,EAASgC,OAAOJ,EAAO,GACvBzB,IACAoB,aAAaC,QAAQ,WAAYxB,EAASyB,YAT6CQ,CAAUL,KAA3D,UAPLV,SAASC,eAAe,SAoB1D,SAASe,IACR/B,IACAL,EAAe,EACfkB,IAASC,OAAOX,EAAmBR,GAAeoB,SAASC,eAAe,SAwB5DgB,MApBf,WAEC,OAzFD,WACC,IAAIC,EAAOb,aAAac,QAAQ,YACnB,OAATD,GAA0B,KAATA,EACpBhC,QAAQC,IAAI,kBAGZL,EAAWoC,EAAKE,MAAM,KAkFvBC,GAGC,yBAAKT,UAAU,cACd,yBAAKA,UAAU,aACd,yBAAKA,UAAU,cACd,wBAAIU,GAAG,QAAP,gBAED,yBAAKV,UAAU,gBACd,4BAAQA,UAAU,SAASU,GAAG,QAAQT,QAASjB,GAA/C,SACA,4BAAQgB,UAAU,SAASC,QAASG,GAApC,UAED,yBAAKJ,UAAU,SAASC,QAASV,GAAjC,OACA,yBAAKS,UAAU,YAAYU,GAAG,YC1GlCxB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d8b52c35.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nvar milliseconds = -1\nvar timer;\nvar running = false;\nvar lapTimes = [];\nvar addLapTimes = setTimeout(function initialLapLoad(){updateLaptimes(); console.log(addLapTimes);}, 500);\n\nfunction retrieveSavedLapTimes() {\n\tvar data = localStorage.getItem('lapTimes');\n\tif (data === null || data === \"\") {\n\t\tconsole.log(\"No data stored\");\n\t}\n\telse {\n\t\tlapTimes = data.split(',')\n\t}\n}\n\nfunction setTimer() {\n\ttimer = setInterval(function update() {\n\t\tmilliseconds++;\n\t\tReactDOM.render(millisecondsToTime(milliseconds), document.getElementById('time'));\n\t}, 10);\n\tconsole.log(lapTimes);\n}\n\n\nfunction millisecondsToTime(time) {\n\tfunction pad(n) {\n\t\treturn ('00' + n).slice(-2);\n\t}\n\tvar ms = time % 100;\n\ttime = (time - ms) / 100;\n\tvar secs = time % 60;\n\ttime = (time - secs) / 60;\n\tvar mins = time % 60;\n\tvar hrs = (time - mins) / 60;\n\n\treturn pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + ':' + pad(ms);\n}\n\nfunction startPauseClick() {\n\tupdateLaptimes();\n\tif (!running) {\n\t\tsetTimer();\n\t\trunning = true;\n\t\tReactDOM.render(\"Pause\", document.getElementById('start'));\n\t}\n\telse {\n\t\tclearInterval(timer);\n\t\trunning = false;\n\t\tReactDOM.render(\"Start\", document.getElementById('start'));\n\t}\n\n}\n\nfunction lapClick() {\n\tif (milliseconds < 0) {\n\t\tlapTimes.unshift(0)\n\t}\n\telse {\n\t\tlapTimes.unshift(milliseconds);\n\t}\n\tlocalStorage.setItem('lapTimes', lapTimes.toString());\n\tupdateLaptimes();\n}\n\nfunction updateLaptimes() {\n\tReactDOM.render(createLapList(), document.getElementById('laps'));\n}\n\nfunction createLapList() {\n\treturn (\n\t\t<ol>\n\t\t\t{lapTimes.map((lapTime, index) => <li key={index}>\n\t\t\t\t{millisecondsToTime(lapTime) + \" \"}<button className=\"delete-button\" onClick={() => deleteLap(index)} >X</button></li>)}\n\t\t</ol>\n\t)\n}\n\n\nfunction deleteLap(index) {\n\tlapTimes.splice(index, 1);\n\tupdateLaptimes();\n\tlocalStorage.setItem('lapTimes', lapTimes.toString());\n}\n\n\nfunction resetClick() {\n\tupdateLaptimes();\n\tmilliseconds = 0;\n\tReactDOM.render(millisecondsToTime(milliseconds), document.getElementById('time'));\n}\n\n\nfunction App() {\n\tretrieveSavedLapTimes();\n\treturn (\n\n\t\t<div className=\"background\">\n\t\t\t<div className=\"stopwatch\">\n\t\t\t\t<div className=\"number-box\">\n\t\t\t\t\t<h1 id=\"time\">00:00:00:00</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-align\">\n\t\t\t\t\t<button className=\"button\" id=\"start\" onClick={startPauseClick}>Start</button>\n\t\t\t\t\t<button className=\"button\" onClick={resetClick}>Reset</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button\" onClick={lapClick}>Lap</div>\n\t\t\t\t<div className=\"lap-times\" id=\"laps\"></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}